unit Unit2;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error,
  FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, FireDAC.UI.Intf,
  FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Phys, FireDAC.VCLUI.Wait, Vcl.StdCtrls, Data.DB, FireDAC.Comp.Client,
  FireDAC.Comp.DataSet;

type
  TForm2 = class(TForm)
    Query: TFDQuery;
    FDConexao: TFDConnection;
    EditDataBase: TEdit;
    Label1: TLabel;
    Button1: TButton;
    EditUserName: TEdit;
    Label2: TLabel;
    EditSenha: TEdit;
    Label3: TLabel;
    EditPort: TEdit;
    Label4: TLabel;
    EditServer: TEdit;
    Label5: TLabel;
    procedure Button1Click(Sender: TObject);
  private
    procedure conectar;
  public
    { Public declarations }
  end;

var
  Form2: TForm2;

implementation

{$R *.dfm}

procedure TForm2.Button1Click(Sender: TObject);
begin
 conectar;
end;

procedure TForm2.conectar;
 begin
 try
 FDConexao.params.DriverID := 'PG';
 FDconexao.Params.Values['database'] := EditDataBase.Text;
 FDconexao.Params.Values['Server'] := EditServer.Text;
 FDconexao.Params.Values['Port'] := (EditPort.Text);
 FDconexao.Connected := true;

   except
    on E: Exception do
   begin
   ShowMessage('Conexão mal sucedida');
   end
   end;
   query.sql.Text := 'SELECT * FROM PESSOA';
   query.open;

   while not query.Eof do
   begin
   showmessage('Nome' + query.FieldByName('DSNOME').AsString);
   query.Next;
   end;

end;

end.
