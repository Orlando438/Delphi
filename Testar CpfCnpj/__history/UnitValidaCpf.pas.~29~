unit UnitValidaCpf;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error,
  FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, FireDAC.UI.Intf,
  FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Phys, FireDAC.VCLUI.Wait, Vcl.StdCtrls, Data.DB, FireDAC.Comp.Client,
  FireDAC.Comp.DataSet, FireDAC.Phys.PG, FireDAC.Phys.PGDef, UnitGetValidadorCpf;

type
  TFormValidaCpf = class(TForm)
    Query: TFDQuery;
    EditDataBase: TEdit;
    Label1: TLabel;
    Button1: TButton;
    EditUserName: TEdit;
    Label2: TLabel;
    EditSenha: TEdit;
    Label3: TLabel;
    Memo1: TMemo;
    Label6: TLabel;
    CheckBoxCNPJ: TCheckBox;
    FDConexao: TFDConnection;
    ButtonListar: TButton;
    CheckBoxExibirApenasCodigo: TCheckBox;
    procedure Button1Click(Sender: TObject);
    procedure ButtonListarClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
  private
    function GetNatureza: string;
  public
    procedure conectar;
    procedure listar;
  end;

var
  FormValidaCpf: TFormValidaCpf;

implementation

{$R *.dfm}

procedure TFormValidaCpf.Button1Click(Sender: TObject);
begin
 conectar;
end;

function TFormValidaCpf.GetNatureza: string;
begin
  Result := '';
   if (CheckBoxCNPJ.Checked) then
     Result := 'WHERE FLNATUREZA = 1 '
   else
     Result := 'WHERE FLNATUREZA = 0 ' // fisica
end;

procedure TFormValidaCpf.conectar;
 begin
 try
   FDConexao.Params.Clear();
   FDConexao.params.DriverID := 'PG';
   FDconexao.Params.Values['Server'] := 'localhost';
   FDconexao.Params.Values['Port'] := '5432';
   FDconexao.Params.Values['Database'] := trim(EditDataBase.Text);
   FDconexao.Params.Values['User_Name'] := trim(EditUserName.Text);
   FDconexao.Params.Values['MetaDefSchema'] := trim(EditUserName.Text);
   FDconexao.Params.Values['Password'] := trim(EditSenha.Text);
   FDconexao.Connected := true;
   except
    on E: Exception do
   begin
     ShowMessage('Conexão mal sucedida');
   end;
 end;
end;

procedure TFormValidaCpf.FormCreate(Sender: TObject);
begin
  Memo1.Lines.Delete(0);
end;

procedure TFormValidaCpf.ButtonListarClick(Sender: TObject);
begin
  Listar;
end;

procedure TFormValidaCpf.listar;
begin
try
  Memo1.Lines.Clear;
  query.Connection := FDconexao;
  query.sql.Text :=  'SELECT IDDOCIDENT, DSNOME, CDPESSOA '+
                     '       FROM PESSOA '+
                             GetNatureza +
                     '            AND TRIM(IDDOCIDENT) <> ''''  '+
                     '            AND IDDOCIDENT IS NOT NULL ';
  query.open;
  query.First;
  except
  on E: Exception do
    begin
      ShowMessage('Não há conexão com o Banco!');
    end;
  end;

  while not query.Eof do
  begin
    if (CheckBoxCNPJ.Checked) then
      begin
       if (not ValidaCnpj(RetiraCaracteresNaoNumericos(query.FieldByName('IDDOCIDENT').AsString))) then

         if (not CheckBoxExibirApenasCodigo.Checked) then
           memo1.Lines.Add(' Cod:  '+ query.FieldByName('CDPESSOA').AsString +
                           ' Nome: '+ query.FieldByName('DSNOME').AsString   +
                           ' CNPJ: '+ query.FieldByName('IDDOCIDENT').AsString)
         else
           memo1.Lines.add(query.FieldByName('CDPESSOA').AsString + ',');
      end
     else
      begin
       if (not VAlidaCpf(RetiraCaracteresNaoNumericos(query.FieldByName('IDDOCIDENT').AsString))) then

         if (not CheckBoxExibirApenasCodigo.Checked) then
           memo1.Lines.Add(' Cod:  '+ query.FieldByName('CDPESSOA').AsString +
                           ' Nome: '+ query.FieldByName('DSNOME').AsString   +
                           ' CPF:  '+ query.FieldByName('IDDOCIDENT').AsString)
         else
          memo1.Lines.add(query.FieldByName('CDPESSOA').AsString + ',');
      end;
      query.Next;
  end;
end;

end.
